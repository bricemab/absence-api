import {ApplicationError} from "../../utils/Types";

export enum GeneralErrors {
  METHOD_NOT_IMPLEMENTED = "METHOD_NOT_IMPLEMENTED",
  UNHANDLED_ERROR = "UNHANDLED_ERROR",
  USER_TOKEN_IS_MISSING = "USER_TOKEN_IS_MISSING",
  OBJECT_NOT_FOUND_IN_DATABASE = "OBJECT_NOT_FOUND_IN_DATABASE",
  INVALID_REQUEST = "INVALID_REQUEST",
  PACKET_NOT_AUTHENTIC = "PACKET_NOT_AUTHENTIC",
  DATABASE_REQUEST_ERROR = "DATABASE_REQUEST_ERROR",
  ENTITY_ID_MISSING_ERROR = "ENTITY_ID_MISSING_ERROR",
  UNVALID_FILE_PATH = "UNVALID_FILE_PATH",
  INVALID_SERVICE = "INVALID_SERVICE",
  KEY_EXPIRATION = "KEY_EXPIRATION",
  ALREADY_EXIST = "ALREADY_EXIST"
}

export enum AuthenticationErrors {
  ACCESS_NOT_AUTHORIZED = "ACCESS_NOT_AUTHORIZED",
  AUTH_NO_TOKEN_PROVIDED = "AUTH_NO_TOKEN_PROVIDED",
  AUTH_MUST_BE_LOGGED_ON = "AUTH_MUST_BE_LOGGED_ON",
  AUTH_MUST_BE_LOGGED_OFF = "AUTH_MUST_BE_LOGGED_OFF"
}

export type ApplicationReject = (error: ApplicationError) => void;
